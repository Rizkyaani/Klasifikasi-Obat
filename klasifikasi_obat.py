# -*- coding: utf-8 -*-
"""Klasifikasi Obat.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/15BQrNdrybdr7pBWbrcavWZXviJ9RvL_d

# KLASIFIKASI OBAT

Sumber Data : https://github.com/MuhammadAuliaa/KNN_KlasifikasiObat/blob/main/drug200.csv

Atribut Data :

age = usia

sex = jenis kelamin

BP = tekanan darah

cholesterol = tingkat kolesterol

Na_to_K = potasium

drug = jenis obat (label)
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import confusion_matrix, accuracy_score, classification_report
from sklearn.preprocessing import MinMaxScaler
import seaborn as sns

df = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/drug200.csv')
df.head()

df.shape

df.info()

df.describe()

df.Drug.value_counts()

df.Sex.value_counts()

sns.histplot(df['Age'])

"""Dari histogram menunjukkan bahwa dataset berisi rentang usia antara 15 hingga 75. Frekuensi kemunculan usia paling banyak dalam dataset antara rentang 20 hingga 30 dan rentang 35 dan 40"""

df.isnull().sum()

"""Tidak ada data yang kosong"""

df.duplicated().sum()

"""Tidak ada data duplikasi"""

sns.set_theme(style='ticks')
sns.countplot(y='Drug', data=df, palette='pastel')
plt.title('Jumlah Jenis Obat')
plt.xlabel('Jumlah')
plt.ylabel('Jenis Obat')

"""Jumlah jenis obat tertinggi adalah obat Y dan jenis obat terendah adalah obat B"""

sns.set_theme(style='ticks')
sns.countplot(x='Sex', data=df, palette='rocket')
plt.title('Jumlah Jenis Kelamin')
plt.xlabel('Jenis Kelamin')
plt.ylabel('Jumlah')

"""Jenis kelamin Laki-laki atau male lebih tinggi dari perempuan atau female"""

#Mengubah tipe data string ke integer dengan label encoder

from sklearn.preprocessing import LabelEncoder

label_encoder = LabelEncoder()
df['Sex'] = label_encoder.fit_transform(df['Sex'])
df['BP'] = label_encoder.fit_transform(df['BP'])
df['Cholesterol'] = label_encoder.fit_transform(df['Cholesterol'])
df['Drug'] = label_encoder.fit_transform(df['Drug'])

df.head()

x = df.drop(columns = ['Drug'])
y = df['Drug']

print('x :', x.shape)
print('y :', y.shape)

x_train, x_test, y_train, y_test = train_test_split(x, y, test_size=0.2, random_state=42)

print(f'x_train : {x_train.shape}')
print(f'x_test : {x_test.shape}')
print(f'y_train : {y_train.shape}')
print(f'y_test : {y_test.shape}')

knn =KNeighborsClassifier(n_neighbors=3)
knn.fit(x_train, y_train)

y_pred = knn.predict(x_test) #prediksi model
knn_acc = accuracy_score(y_pred, y_test)

print(classification_report(y_test, y_pred))
print('Akurasi KNN : {:.2f}%'.format(knn_acc*100))

testing = {'Age': [35],
           'Sex': [1],
           'BP': [2],
           'Cholesterol': [0],
           'Na_to_K': [4.5]
           }

testing = pd.DataFrame(testing)
testing

pred = knn.predict(testing)
print('Hasil prediksi dari data pasien baru')
print(pred)

"""Jenis obat yang direkomendasikan dari data baru adalah jenis obat X"""